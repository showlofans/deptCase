<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deptcase.casemgt.dao.LoginUserDao" >

	<sql id="t_user">login_user</sql>
  <resultMap id="BaseResultMap" type="com.deptcase.casemgt.entity.LoginUserPo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pass" property="pass" jdbcType="VARCHAR" />
    <result column="user_limit" property="userLimit" jdbcType="INTEGER" />
    <result column="root_flag" property="rootFlag" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="user_remark" property="userRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, pass, user_limit, root_flag, create_time, user_remark
  </sql>
  
  <!-- 根据条件查询用户 -->
  <select id="getUserByParams" resultMap="BaseResultMap" parameterType="map">
  	select <include refid="Base_Column_List"></include>
  	from <include refid="t_user"></include>
  	<where>
  	  <include refid="condition_sql"></include>
  	</where>
  </select>
  <!-- 统计用户数 -->
  <select id="countUser" parameterType="map" resultType="int">
  	select count(id)
  	from <include refid="t_user"></include>
  	<where>
  	  <include refid="condition_sql"></include>
  	</where>
  </select>
  
  <sql id="condition_sql">
  	<if test="name != null" >
        AND name = #{name,jdbcType=VARCHAR}
      </if>
  	<if test="id != null" >
        AND id = #{id,jdbcType=INTEGER}
      </if>
  	<if test="nameLike != null" >
        AND name like concat('%',#{nameLike},'%')
      </if>
      <if test="pass != null" >
        AND pass = #{pass,jdbcType=VARCHAR}
      </if>
      <if test="userLimit != null" >
       AND  user_limit = #{userLimit,jdbcType=INTEGER}
      </if>
      <if test="rootFlag != null" >
        AND root_flag = #{rootFlag,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime,jdbcType=BIGINT}
      </if>
      <if test="userRemark != null" >
        AND user_remark like concat('%',#{userRemarkLike},'%')
      </if>
  </sql>
  <!-- 查询登陆用户 -->
  <select id="getOneUser" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from <include refid="t_user"></include>
    <where>
    	<include refid="condition_sql"></include>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addUser" parameterType="com.deptcase.casemgt.entity.LoginUserPo" >
    insert into login_user (id, name, pass, 
      user_limit, root_flag, create_time, 
      user_remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{userLimit,jdbcType=INTEGER}, #{rootFlag,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{userRemark,jdbcType=VARCHAR})
  </insert>
  <!-- 添加返key -->
  <insert id="addUserKey" parameterType="com.deptcase.casemgt.entity.LoginUserPo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
    select LAST_INSERT_ID()
  </selectKey>
    insert into login_user (name, pass, 
      user_limit, root_flag, create_time, 
      user_remark)
    values (#{name,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{userLimit,jdbcType=INTEGER}, #{rootFlag,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{userRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deptcase.casemgt.entity.LoginUserPo" >
    insert into login_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pass != null" >
        pass,
      </if>
      <if test="userLimit != null" >
        user_limit,
      </if>
      <if test="rootFlag != null" >
        root_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userRemark != null" >
        user_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        #{pass,jdbcType=VARCHAR},
      </if>
      <if test="userLimit != null" >
        #{userLimit,jdbcType=INTEGER},
      </if>
      <if test="rootFlag != null" >
        #{rootFlag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userRemark != null" >
        #{userRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!-- 编辑用户 -->
  <update id="editUser" parameterType="com.deptcase.casemgt.entity.LoginUserPo" >
    update <include refid="t_user"></include>
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        pass = #{pass,jdbcType=VARCHAR},
      </if>
      <if test="userLimit != null" >
        user_limit = #{userLimit,jdbcType=INTEGER},
      </if>
      <if test="rootFlag != null" >
        root_flag = #{rootFlag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userRemark != null" >
        user_remark = #{userRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deptcase.casemgt.entity.LoginUserPo" >
    update login_user
    set name = #{name,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      user_limit = #{userLimit,jdbcType=INTEGER},
      root_flag = #{rootFlag,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      user_remark = #{userRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>